@SET_MAKE@
SHELL = /bin/sh
RM = /bin/rm -f

config_dir = @CONFIG_DIR@
prefix     = @prefix@

CC         = @CC@
CFLAGS     = @CFLAGS@
ELF_CC     = @ELF_CC@
ELF_CFLAGS = @ELF_CFLAGS@ -Dunix $(CFLAGS)
CC_SHARED  = @CC_SHARED@

FC      = @FC@
FCFLAGS = @FCFLAGS@
FCLIBS  = @FCLIBS@

SLSH_PATH = @SLANG_LIBDIR@/../bin/slsh

WITH_HEADAS = @WITH_HEADAS@
HEA = @HEADAS_DIR@

SLANG_INC  = @SLANG_INC@
SLANG_LIB  = @SLANG_LIB@ -lslang
CFITSIO_INC = @CFITSIO_INC@
CFITSIO_LIB = @CFITSIO_LIB@
LIBS_FOR_MODULES = @ISIS_LIB_FOR_MODULES@  @CFITSIO_LIB_FOR_MODULES@ @SLANG_LIB_FOR_MODULES@#

INCS = -I$(config_dir)/src $(SLANG_INC)

SHARED_LIBRARIES = rmf_user.so example-profile.so

check:	write-permission $(SHARED_LIBRARIES)
	@if test -f "../.binary" ; then \
	    TEST_ISIS="../bin/isis"; \
	    ISIS_SRCDIR=".."; \
	    export ISIS_SRCDIR ; \
	    SLSH="../opt/bin/slsh"; \
	    SLSH_PATH="../opt/share/slsh" ; \
	    export SLSH SLSH_PATH ; \
	    LD_LIBRARY_PATH="../opt/lib" ; \
	    export LD_LIBRARY_PATH ; \
	    DYLD_LIBRARY_PATH=$$LD_LIBRARY_PATH ; \
	    export DYLD_LIBRARY_PATH ; \
	elif test -x "../src/objs/isis"; then \
	    TEST_ISIS="../src/objs/isis"; \
	    ISIS_SRCDIR=".."; \
	    export ISIS_SRCDIR ; \
	    SLSH=$(SLSH_PATH); \
	    export SLSH ; \
	 else \
	    TEST_ISIS="`which isis`" ; \
	    if test ! -x "$$TEST_ISIS" ; then \
	        echo "" ; \
	        echo "*** isis executable not found" ; \
	        echo "" ; \
		exit 1 ; \
	    fi ;            \
	 fi ; \
	if test -f "$(HEA)/headas-init.sh" ; then \
	    HEADAS="$(HEA)" ; export HEADAS ; . $$HEADAS/headas-init.sh ; \
	fi ; \
	$$SLSH -n $(WITH_HEADAS) ./run_tests.sl $$TEST_ISIS $$ISIS_SRCDIR ; \
	$$SLSH -n ./module_import.sl $$ISIS_SRCDIR
	@echo ""

install-check:	$(SHARED_LIBRARIES)
	@$(SLSH_PATH) -n $(WITH_HEADAS) ./run_tests.sl isis $(prefix) ; \
	@$(SLSH_PATH) -n ./module_import $(prefix)
	@echo ""

write-permission:
	@if ! test -w "." ; then \
	   echo "" ; \
	   echo "***  Cannot run regression tests:  no write permission in test directory" ; \
	   echo "" ; \
	   exit 1; \
	fi

rmf_user.so:
	$(CC_SHARED) -o rmf_user.so $(INCS) rmf_user.c $(LIBS_FOR_MODULES)

example-profile.so:
	$(CC_SHARED) -o example-profile.so $(INCS) example-profile.c

clean:
	$(RM) .##* *.log *.so *.o
	cd uncon ; make clean

distclean:
	$(MAKE) clean
	$(RM) Makefile config.h
	cd uncon ; make distclean
