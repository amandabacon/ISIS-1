
This module provides access to the additive, multiplicative
and convolution source models in the XSPEC library.

For systems with ELF support, the module may be imported at
ISIS run-time via dynamic linking.  Alternatively, the module
may be statically linked with ISIS.  In this case, the ISIS
configure script should have been run using

        ./configure --with-xspec-static=$HEADAS

Note that most of the XSPEC interface code is automatically
generated by parsing the XSPEC source code. If your version of
XSPEC is significantly different than the one used to generate
this module, you may need to re-generate the interface code.
However, don't do this unless the default installation doesn't
work or if you have some other good reason.  See
modules/xspec/src/README.code for details on generating code
for a new module.

Environment Variables affecting this module:
-------------------------------------------

            HEADAS - required by XSPEC, needed to compile this
		     module if compiling for dynamic linking
		     
  ISIS_MODULE_PATH - used by ISIS to find xspec-module.so at
                     run-time
  
 SLANG_MODULE_PATH - used by S-Lang at run-time (alternative to
                     ISIS_MODULE_PATH)

Requirements:
-------------

Both S-Lang and XSPEC must be installed on your system.  The
path to the local XSPEC libraries must be provided using either
the --with-headas or --with-xspec-static configure options.


Potential Problems:
-------------------

It may be necessary to compile the XSPEC module using the same
C compiler that was used to compile the XSPEC libraries. If
different C compilers are used, a runtime error such as
  S-Lang Error: Intrinsic Error: Error linking to xspec-module.so: \
      ld.so.1: isis: fatal: relocation error: file
   xspec-module.so: symbol main: referenced symbol not found
may be encountered (Thanks to Marc Audard for providing this
solution).

If ISIS and XSPEC were compiled using different PGPLOT and/or (C)FITSIO
libraries (e.g. a different version), or using different major versions of
the C library libc (e.g. some with libc5, others with libc6), strange
behavior could result.

If require("xspec") fails, it might be because ISIS_MODULE_PATH is set
incorrectly or because xspec-module.so has undefined symbols or
is otherwise incorrectly built.  If symbols are missing:
   1) find the libraries which supply the missing symbols 
   2) edit the Makefile to link those libraries into xspec-module.so
   3) re-build xspec-module.so
Your system administrator and/or local XSPEC guru may be able to help 
with these steps.

Please send bug-reports to John Houck <houck@space.mit.edu>


