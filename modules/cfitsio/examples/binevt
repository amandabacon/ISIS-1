#!/usr/bin/env slsh

require ("histogram");
require ("fits");

static define create_image (infile, outfile, xgrid, ygrid)
{
   variable x, y;
   (x,y) = fits_read_col (infile, "X", "Y");
   vmessage ("File read");

   vmessage ("Performing histogram");
   variable img = hist2d (y, x, ygrid, xgrid);
   img[*,-1] = 0;
   img[-1,*] = 0;

   vmessage ("Writing image");
   fits_write_image (outfile, NULL, img, NULL, NULL);
   %variable wcs = fitswcs_get_column_wcs (file, ["X", "Y"]);
   %variable wcs_p = fitswcs_get_column_wcs (file, ["X", "Y"], 'P');
}

static define doit ()
{
   variable infile = __argv[1];
   variable outfile = __argv[2];
   variable xgrid = eval("[" + extract_element (__argv[3], 0, ',') + "];");
   variable ygrid = eval("[" + extract_element (__argv[3], 1, ',') + "];");
   create_image (infile, outfile, xgrid, ygrid);
}

if (__argc != 4)
{
   () = fprintf (stderr, "%s infile outfile xgrid,ygrid\n", __argv[0]);
   exit (1);
}

doit ();
